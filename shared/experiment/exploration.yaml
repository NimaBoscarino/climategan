# File that contains all possible parameters we want to explore:
# proj_dim, learning rates, lambdas, tasks

# ---------------------------
# -----  SBATCH config  -----
# ---------------------------
cpus: 8
partition: long
mem: 32G
gres: "gpu:rtx8000:1"
codeloc: $HOME/ccai/omnigan

modules: "module load anaconda/3 && module load pytorch"
conda: "conda activate omnienv && conda deactivate && conda activate omnienv"

n_search: -1

# ------------------------
# -----  Train Args  -----
# ------------------------
"args.note": "Hyperparameter search"
"args.comet_tags": ["Exploration_search", "v1"]
"args.config": "config/trainer/my_config.yaml"

# --------------------------
# -----  Model config  -----
# --------------------------
"tasks": # Note: comment all the task-lists and keep only 1!
  sample: list
  from:
    - [m]
    - [m,s]
    - [m,d]
    - [m,s,d]

# -------------------------
# ------- LR tuning -------
# -------------------------
# Generator
"gen.opt.lr.m": # Default is 0.00001
  sample: list
  from: [0.000005, 0.00001, 0.00002, 0.00005, 0.0001, 0.0002, 0.0005, 0.001, 0.002, 0.005]

"gen.opt.lr.s": # Default is 0.00001
  sample: list
  from: [0.000005, 0.00001, 0.00002, 0.00005, 0.0001, 0.0002, 0.0005, 0.001, 0.002, 0.005]

"gen.opt.lr.d": # Default is 0.00001
  sample: list
  from: [0.000005, 0.00001, 0.00002, 0.00005, 0.0001, 0.0002, 0.0005, 0.001, 0.002, 0.005]

# Discriminator
"dis.opt.lr.p": # Default is 0.0001
  sample: list
  from: [0.000005, 0.00001, 0.00002, 0.00005, 0.0001, 0.0002, 0.0005, 0.001, 0.002, 0.005]

"dis.opt.lr.m": # Default is 0.0001
  sample: list
  from: [0.000005, 0.00001, 0.00002, 0.00005, 0.0001, 0.0002, 0.0005, 0.001, 0.002, 0.005]

"dis.opt.lr.s": # Default is 0.0001
  sample: list
  from: [0.000005, 0.00001, 0.00002, 0.00005, 0.0001, 0.0002, 0.0005, 0.001, 0.002, 0.005]

# -------------------------
# ---- Lambdas tuning -----
# -------------------------
# Depth
"train.lambdas.G.d.main": # Default = 1
  sample: list
  from: [0.1, 0.5, 1, 2, 5]

# "train.lambdas.G.d.gml": # Default = 1
#   sample: uniform
#   from: [0.1, 0.5, 1]

# Segmentation
"train.lambdas.G.s.crossent": # Default = 1
  sample: list
  from: [0.1, 0.5, 1, 2, 5]

"train.lambdas.G.s.crossent_pseudo": # Default = 0.001
  sample: list
  from: [0.0001, 0.001, 0.01, 0.1, 1]

"train.lambdas.G.s.advent": # Default = 0.001
  sample: list
  from: [0.0001, 0.001, 0.01, 0.1, 1]

# Masker
"train.lambdas.G.m.bce": # Default = 1
  sample: list
  from: [0.5, 1, 2, 5]

"train.lambdas.G.m.tv": # Default = 1
  sample: list
  from: [1, 10, 50, 100, 500, 1000]

"train.lambdas.advent.ent_main": # Default = 0.5
  sample: list
  from: [0.1, 0.2, 0.5, 1]

"train.lambdas.advent.ent_var": # Default = 0.1
  sample: list
  from: [0.001, 0.01, 0.1, 0.2]

"train.lambdas.advent.adv_main": # Default = 1
  sample: list
  from: [0.2, 0.5, 1, 2, 5]

# -------------------------
# ---- Other hp tuning ----
# -------------------------
"gen.default.proj_dim": # Default = 32
  sample: list
  from: [16, 32, 64, 128, 256]
